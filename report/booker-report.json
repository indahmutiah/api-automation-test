{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-01T04:06:07.164Z",
    "end": "2025-05-01T04:06:12.063Z",
    "duration": 4899,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bf4e6f40-5b34-4a2c-9960-2fca06099c32",
      "title": "",
      "fullFile": "/Users/indah/Documents/CLASS AUTOMATION/CYPRESS CLASS/api-automation-test/booker-e2e.spec.js",
      "file": "/booker-e2e.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "79fc3305-67e4-40f5-9994-e83881687c0b",
          "title": "Booker API e2e testing",
          "fullFile": "/Users/indah/Documents/CLASS AUTOMATION/CYPRESS CLASS/api-automation-test/booker-e2e.spec.js",
          "file": "/booker-e2e.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Booker API e2e testing\"",
              "fullTitle": "Booker API e2e testing \"before all\" hook in \"Booker API e2e testing\"",
              "timedOut": false,
              "duration": 1890,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  username: process.env.API_BACKEND_USERNAME,\n  password: process.env.API_BACKEND_PASSWORD,\n};\nconst response = await request(process.env.API_URL)\n  .post(\"/auth\")\n  .set({ \"Content-Type\": \"application/json\", Accept: \"application/json\" })\n  .send(body);\nexpect(response.statusCode).to.equal(200);\ntoken = response.body.token;\nconsole.log(\"token:\", token);",
              "err": {},
              "uuid": "9dd0f5b7-8e1b-43aa-a380-72d12368f06d",
              "parentUUID": "79fc3305-67e4-40f5-9994-e83881687c0b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "API Auth should return a valid token",
              "fullTitle": "Booker API e2e testing API Auth should return a valid token",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(token).to.be.a(\"string\");\nexpect(token.length).to.be.greaterThan(0);",
              "err": {},
              "uuid": "563d88a5-06c2-4e22-a2fb-0cc6a5a09b20",
              "parentUUID": "79fc3305-67e4-40f5-9994-e83881687c0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API Create Booking",
              "fullTitle": "Booker API e2e testing API Create Booking",
              "timedOut": false,
              "duration": 1019,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(process.env.API_URL)\n  .post(\"/booking\")\n  .set({ \"Content-Type\": \"application/json\", Accept: \"application/json\" })\n  .send(data);\nexpect(response.statusCode).to.equal(200);\nexpect(response.body.booking.firstname).to.equal(data.firstname);\nexpect(response.body.booking.lastname).to.equal(data.lastname);\nconsole.log(\"response create Booking:\", response.body);\nbookingId = response.body.bookingid;",
              "err": {},
              "uuid": "a05a2c1c-ac84-4cdf-aa15-54fc279d573b",
              "parentUUID": "79fc3305-67e4-40f5-9994-e83881687c0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API Get Booking",
              "fullTitle": "Booker API e2e testing API Get Booking",
              "timedOut": false,
              "duration": 1011,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(process.env.API_URL)\n  .get(`/booking/${bookingId}`)\n  .set({ \"Content-Type\": \"application/json\", Accept: \"application/json\" });\nexpect(response.statusCode).to.equal(200);\nconsole.log(\"response get booking:\", response.body);",
              "err": {},
              "uuid": "34998805-7fc8-40d2-8ea2-c7accfd67afe",
              "parentUUID": "79fc3305-67e4-40f5-9994-e83881687c0b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "API Delete Booking",
              "fullTitle": "Booker API e2e testing API Delete Booking",
              "timedOut": false,
              "duration": 971,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(process.env.API_URL)\n  .delete(`/booking/${bookingId}`)\n  .set({\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    Cookie: `token=${token}`,\n  });\nexpect(response.statusCode).to.equal(201);",
              "err": {},
              "uuid": "6ffc8294-d4ef-444b-b26d-b6d9af669606",
              "parentUUID": "79fc3305-67e4-40f5-9994-e83881687c0b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "563d88a5-06c2-4e22-a2fb-0cc6a5a09b20",
            "a05a2c1c-ac84-4cdf-aa15-54fc279d573b",
            "34998805-7fc8-40d2-8ea2-c7accfd67afe",
            "6ffc8294-d4ef-444b-b26d-b6d9af669606"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3001,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "booker-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "report",
        "reportFilename": "booker-report"
      },
      "version": "6.2.0"
    }
  }
}